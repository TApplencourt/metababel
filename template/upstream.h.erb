#pragma once
#include <metababel/btx_component.h>
#ifdef __cplusplus
extern "C" {
#endif

// Dispatcher
typedef void(dispatcher_t)(callbacks_t *callbacks, common_data_t *common_data,
                           const bt_message *upstream_message);

<%# The Function who register the callbacks to the dispatcher %>
<% register_callbacks.each do |event| %>
typedef void <%= event.name_sanitized %>_callback_f(
    void *btx_handle,
    void *usr_data<%= event.args.map{ |s| s.type }.join_with_prefix(', ') %>);

void btx_register_callbacks_<%= event.name_sanitized %>(
    void *btx_handle, <%= event.name_sanitized %>_callback_f *callback);

<% end %>
void btx_delete_dispatchers(common_data_t *common_data);

#ifdef __cplusplus
}
#endif
